// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // set load bit of register if any of load/inc/reset is set
    Or(a=load,b=inc,out=loadorinc);
    Or(a=loadorinc,b=reset,out=anychange);
    // key point here is higher priority setting bit overwrites lower priority ones
    // increment
    Inc16(in=lastout,out=incout);
    Mux16(a=in,b=incout,sel=inc,out=out0);
    // load
    Mux16(a=out0,b=in,sel=load,out=out1);
    // reset
    Mux16(a=out1,b=false,sel=reset,out=out2);
    Register(in=out2,load=anychange,out=lastout,out=out);
}
